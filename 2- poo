using System;

class Investimento
{
    public double ValorInicial { get; set; }
    public double TaxaJurosMensal { get; set; }

    public Investimento(double valorInicial, double taxaJurosMensal)
    {
        ValorInicial = valorInicial;
        TaxaJurosMensal = taxaJurosMensal / 100;
    }

    public double CalcularMontante(int meses)
    {
        return ValorInicial * Math.Pow(1 + TaxaJurosMensal, meses);
    }

    public double CalcularMontanteAposResgate(int mesResgate, int mesesTotal)
    {
        double montanteAntesResgate = CalcularMontante(mesResgate);
        return montanteAntesResgate * Math.Pow(1 + TaxaJurosMensal, mesesTotal - mesResgate);
    }

    public double MontanteFinal(int mesesTotal, int mesResgate)
    {
        return CalcularMontanteAposResgate(mesResgate, mesesTotal);
    }
}

class Program
{
    static void Main(string[] args)
    {
        Console.Write("Informe o valor do investimento inicial: ");
        double valorInicial = Convert.ToDouble(Console.ReadLine());

        Console.Write("Informe a taxa de juros mensal: ");
        double taxaJurosMensal = Convert.ToDouble(Console.ReadLine());

        Investimento investimento = new Investimento(valorInicial, taxaJurosMensal);
        int totalMeses = 8;
        int mesResgate = 5;

        // Cabeçalho da tabela
        Console.WriteLine("\n+------+-----------------+");
        Console.WriteLine("| Mês  | Montante (R$)  |");
        Console.WriteLine("+------+-----------------+");

        // Exibe o montante para cada mês até o mês de resgate
        for (int mes = 1; mes <= totalMeses; mes++)
        {
            double montante = investimento.CalcularMontante(mes);
            Console.WriteLine($"| {mes,-4} | {montante,-15:F2} |");
        }

        Console.WriteLine("+------+-----------------+");

        // Calcula o montante final após o resgate
        double montanteFinal = investimento.MontanteFinal(totalMeses, mesResgate);
        Console.WriteLine($"\nPós resgate no {mesResgate}º mês: R$ {montanteFinal:F2}");
    }
}
